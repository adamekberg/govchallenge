{"version":3,"sources":["history.js","services/urlManagement.service.js","layers/index.js","services/controls.service.js","Components/controlOption.js","Components/controlToggle.js","Components/Controller.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","controller","mapUrlToProps","url","props","showParking","decode","UrlQueryParamTypes","boolean","cp","showBikeTraffic","bt","extrudeBikeTraffic","xbt","showCarTraffic","ct","extrudeCarTraffic","xct","showEvCharging","evc","menuOpen","m","showPublicTransit","pt","showBusStops","bs","showFerryStops","fs","showMetroStops","ms","showRailStops","rs","showShipStops","ss","showTramStops","ts","mapUrlChangeHandlersToProps","onChange","value","replaceInUrlQuery","encode","controllerUrlManager","addUrlProps","map","longitude","number","lng","latitude","lat","zoom","z","pitch","p","bearing","b","toFixed","mapUrlManager","parkingLayer","busStopLayer","carFerryStopLayer","bikeTrafficLayer","carTrafficLayer","evChargingLayer","metroStationLayer","railStationLayer","ferryStopLayer","tramStationLayer","stockholmAreaLayers","__webpack_require__","e","then","bind","layer","default","layers","layerLoaded","animate","requestAnimationFrame","TWEEN","update","onLayerLoaded","cb","setLayers","layerSettings","_bikeTrafficHeight","_carTrafficHeight","toolTipCallback","animateLayer","setHeight","extrude","height","target","Tween","to","easing","Easing","Quadratic","InOut","onUpdate","start","controls_service","label","ref","key","heightKey","dep","indent","isMaster","masterKey","shouldDisable","dependentBox","controlOption","controlSettings","toggleLayer","i","react_default","a","createElement","className","Checkbox","type","checked","defaultChecked","_ref","Object","objectSpread","controlToggle","state","result","pressedControl","controls","find","control","filter","obj","forEach","box","push","subBoxes","sub","reduce","acc","isOn","length","Controller","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_updateLayers","visibleLayers","onLayerChange","_toggleLayer","v","item","setTimeout","controlOptions","_this2","listen","forceUpdate","_this3","BurgerMenu","width","right","noOverlay","disableOverlayClick","isOpen","onStateChange","option","settings","React","Component","defaultProps","isMobile","App","_onWebGLInitialized","gl","enable","DEPTH_TEST","depthFunc","LEQUAL","setState","_onLayerChange","mapLayers","_toolTipCallback","info","hoveredObject","object","pointerX","x","pointerY","y","style","position","zIndex","pointerEvents","left","top","color","backgroundColor","fontFamily","padding","message","viewState","_ref2","console","log","clearTimeout","urlTimer","document","getElementById","addEventListener","evt","preventDefault","_this4","id","esm","_deck","deck","onWebGLInitialized","initialViewState","onViewStateChange","viewport","_updateUrl","dist_esm","_map","getMap","mapboxApiAccessToken","process","onLoad","_onMapLoad","mapStyle","preventStyleDiffing","_renderTooltip","Components_Controller","href","rel","Boolean","window","location","hostname","match","configureUrlQuery","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d575e5ff.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import {\r\n  addUrlProps,\r\n  UrlQueryParamTypes,\r\n  replaceInUrlQuery,\r\n  decode,\r\n  encode\r\n} from \"react-url-query\";\r\n\r\nconst controller = {\r\n  mapUrlToProps: (url, props) => {\r\n    return {\r\n      showParking: decode(UrlQueryParamTypes.boolean, url.cp),\r\n      showBikeTraffic: decode(UrlQueryParamTypes.boolean, url.bt),\r\n      extrudeBikeTraffic: decode(UrlQueryParamTypes.boolean, url.xbt),\r\n      showCarTraffic: decode(UrlQueryParamTypes.boolean, url.ct),\r\n      extrudeCarTraffic: decode(UrlQueryParamTypes.boolean, url.xct),\r\n      showEvCharging: decode(UrlQueryParamTypes.boolean, url.evc),\r\n      menuOpen: decode(UrlQueryParamTypes.boolean, url.m),\r\n      showPublicTransit: decode(UrlQueryParamTypes.boolean, url.pt),\r\n      showBusStops: decode(UrlQueryParamTypes.boolean, url.bs),\r\n      showFerryStops: decode(UrlQueryParamTypes.boolean, url.fs),\r\n      showMetroStops: decode(UrlQueryParamTypes.boolean, url.ms),\r\n      showRailStops: decode(UrlQueryParamTypes.boolean, url.rs),\r\n      showShipStops: decode(UrlQueryParamTypes.boolean, url.ss),\r\n      showTramStops: decode(UrlQueryParamTypes.boolean, url.ts)\r\n    };\r\n  },\r\n\r\n  mapUrlChangeHandlersToProps: props => {\r\n    return {\r\n      onChange: value => {\r\n        replaceInUrlQuery(\r\n          \"cp\",\r\n          encode(UrlQueryParamTypes.boolean, value.showParking)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"bt\",\r\n          encode(UrlQueryParamTypes.boolean, value.showBikeTraffic)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"xbt\",\r\n          encode(UrlQueryParamTypes.boolean, value.extrudeBikeTraffic)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"ct\",\r\n          encode(UrlQueryParamTypes.boolean, value.showCarTraffic)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"xct\",\r\n          encode(UrlQueryParamTypes.boolean, value.extrudeCarTraffic)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"evc\",\r\n          encode(UrlQueryParamTypes.boolean, value.showEvCharging)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"m\",\r\n          encode(UrlQueryParamTypes.boolean, value.menuOpen)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"pt\",\r\n          encode(UrlQueryParamTypes.boolean, value.showPublicTransit)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"bs\",\r\n          encode(UrlQueryParamTypes.boolean, value.showBusStops)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"fs\",\r\n          encode(UrlQueryParamTypes.boolean, value.showFerryStops)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"ms\",\r\n          encode(UrlQueryParamTypes.boolean, value.showMetroStops)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"rs\",\r\n          encode(UrlQueryParamTypes.boolean, value.showRailStops)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"ss\",\r\n          encode(UrlQueryParamTypes.boolean, value.showShipStops)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"ts\",\r\n          encode(UrlQueryParamTypes.boolean, value.showTramStops)\r\n        );\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nconst controllerUrlManager = addUrlProps({\r\n  mapUrlToProps: controller.mapUrlToProps,\r\n  mapUrlChangeHandlersToProps: controller.mapUrlChangeHandlersToProps\r\n});\r\n\r\nconst map = {\r\n  mapUrlToProps: (url, props) => {\r\n    return {\r\n      longitude: decode(UrlQueryParamTypes.number, url.lng) || 18.0686,\r\n      latitude: decode(UrlQueryParamTypes.number, url.lat) || 59.3293,\r\n      zoom: decode(UrlQueryParamTypes.number, url.z) || 13,\r\n      pitch: decode(UrlQueryParamTypes.number, url.p) || 45,\r\n      bearing: decode(UrlQueryParamTypes.number, url.b) || 0\r\n    };\r\n  },\r\n\r\n  mapUrlChangeHandlersToProps: props => {\r\n    return {\r\n      onChange: value => {\r\n        replaceInUrlQuery(\r\n          \"lng\",\r\n          encode(UrlQueryParamTypes.number, value.longitude)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"lat\",\r\n          encode(UrlQueryParamTypes.number, value.latitude)\r\n        );\r\n        replaceInUrlQuery(\r\n          \"z\",\r\n          encode(UrlQueryParamTypes.number, value.zoom.toFixed(1))\r\n        );\r\n        replaceInUrlQuery(\r\n          \"p\",\r\n          encode(UrlQueryParamTypes.number, value.pitch.toFixed(1))\r\n        );\r\n        replaceInUrlQuery(\r\n          \"b\",\r\n          encode(UrlQueryParamTypes.number, value.bearing.toFixed(1))\r\n        );\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nconst mapUrlManager = addUrlProps({\r\n  mapUrlToProps: map.mapUrlToProps,\r\n  mapUrlChangeHandlersToProps: map.mapUrlChangeHandlersToProps\r\n});\r\n\r\nexport { controllerUrlManager, mapUrlManager };\r\n","import TWEEN from \"@tweenjs/tween.js\";\n\n// import parkingLayer from './parkingLayer'\n// import busStopLayer from './busStopLayer'\n// import carFerryStopLayer from './carFerryStopLayer'\n// import bikeTrafficLayer from './bikeTrafficLayer'\n// import carTrafficLayer from './carTrafficLayer'\n// import evChargingLayer from './evChargingLayer'\n// import metroStationLayer from './metroStationLayer'\n// import railStationLayer from './railStationLayer'\n// import ferryStopLayer from './ferryStopLayer'\n// import tramStationLayer from './tramStationLayer'\n// import busCoverageLayer from './busCoverageLayer'\n\nlet parkingLayer = () => {};\nlet busStopLayer = () => {};\nlet carFerryStopLayer = () => {};\nlet bikeTrafficLayer = () => {};\nlet carTrafficLayer = () => {};\nlet evChargingLayer = () => {};\nlet metroStationLayer = () => {};\nlet railStationLayer = () => {};\nlet ferryStopLayer = () => {};\nlet tramStationLayer = () => {};\nlet stockholmAreaLayers = () => {};\n\nimport(\"./parkingLayer\").then(layer => {\n  parkingLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./busStopLayer\").then(layer => {\n  busStopLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./carFerryStopLayer\").then(layer => {\n  carFerryStopLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./bikeTrafficLayer\").then(layer => {\n  bikeTrafficLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./carTrafficLayer\").then(layer => {\n  carTrafficLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./evChargingLayer\").then(layer => {\n  evChargingLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./metroStationLayer\").then(layer => {\n  metroStationLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./railStationLayer\").then(layer => {\n  railStationLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./ferryStopLayer\").then(layer => {\n  ferryStopLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./tramStationLayer\").then(layer => {\n  tramStationLayer = layer.default;\n  layers.layerLoaded();\n});\nimport(\"./stockholmAreaLayers\").then(layer => {\n  stockholmAreaLayers = layer.default;\n  layers.layerLoaded();\n});\n\n// layerFiles.forEach(lf => {\n//   import(lf).then(layer => {\n//     allLayers.push(layer.default)\n//     console.log('al', allLayers)\n//   })\n// })\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  TWEEN.update();\n}\n\nanimate();\n\nconst layers = {\n  layerLoaded() {},\n\n  onLayerLoaded(cb) {\n    layers.layerLoaded = cb;\n  },\n\n  setLayers(layerSettings) {\n    return [\n      parkingLayer(layerSettings.showParking),\n      bikeTrafficLayer(\n        layerSettings.showBikeTraffic,\n        layerSettings._bikeTrafficHeight\n      ),\n      carTrafficLayer(\n        layerSettings.showCarTraffic,\n        layerSettings._carTrafficHeight\n      ),\n      evChargingLayer(\n        layerSettings.showEvCharging,\n        layerSettings.toolTipCallback\n      ),\n      busStopLayer(layerSettings.showBusStops),\n      carFerryStopLayer(layerSettings.showFerryStops),\n      metroStationLayer(layerSettings.showMetroStops),\n      railStationLayer(layerSettings.showRailStops),\n      ferryStopLayer(layerSettings.showShipStops),\n      tramStationLayer(layerSettings.showTramStops),\n      stockholmAreaLayers\n    ];\n  },\n\n  animateLayer(setHeight, extrude, cb) {\n    let height = { value: extrude ? 0.01 : 1 },\n      target = extrude ? 1 : 0.01;\n\n    new TWEEN.Tween(height)\n      .to({ value: target }, 500)\n      .easing(TWEEN.Easing.Quadratic.InOut)\n      .onUpdate(() => {\n        setHeight(height.value);\n        cb();\n      })\n      .start();\n  }\n};\n\nexport {\n  parkingLayer,\n  busStopLayer,\n  bikeTrafficLayer,\n  carTrafficLayer,\n  evChargingLayer,\n  carFerryStopLayer,\n  metroStationLayer,\n  railStationLayer,\n  ferryStopLayer,\n  tramStationLayer\n};\n\nexport default layers;\n","export default [\r\n  {\r\n    label: \"Parking\",\r\n    ref: \"parkingCheck\",\r\n    key: \"showParking\"\r\n  },\r\n  {\r\n    label: \"Bicycle Traffic\",\r\n    ref: \"bikeTrafficCheck\",\r\n    key: \"showBikeTraffic\"\r\n  },\r\n  {\r\n    label: \"3D Bicycle Traffic\",\r\n    ref: \"bikeExtrudeCheck\",\r\n    key: \"extrudeBikeTraffic\",\r\n    animate: true,\r\n    heightKey: \"_bikeTrafficHeight\",\r\n    dep: \"showBikeTraffic\",\r\n    indent: true\r\n  },\r\n  {\r\n    label: \"Vehicle Traffic\",\r\n    ref: \"carTrafficCheck\",\r\n    key: \"showCarTraffic\"\r\n  },\r\n  {\r\n    label: \"3D Vehicle Traffic\",\r\n    ref: \"carTrafficCheck\",\r\n    key: \"extrudeCarTraffic\",\r\n    heightKey: \"_carTrafficHeight\",\r\n    animate: true,\r\n    dep: \"showCarTraffic\",\r\n    indent: true\r\n  },\r\n  {\r\n    label: \"Electric Vehicle Charging Stations\",\r\n    ref: \"evChargingCheck\",\r\n    key: \"showEvCharging\"\r\n  },\r\n  {\r\n    label: \"Public transit\",\r\n    ref: \"publicTransitCheck\",\r\n    key: \"showPublicTransit\",\r\n    isMaster: true\r\n  },\r\n  {\r\n    label: \"Bus Stops\",\r\n    ref: \"busStopCheck\",\r\n    key: \"showBusStops\",\r\n    masterKey: \"showPublicTransit\",\r\n    indent: true\r\n  },\r\n  {\r\n    label: \"Metro Stations\",\r\n    ref: \"metroStopCheck\",\r\n    key: \"showMetroStops\",\r\n    masterKey: \"showPublicTransit\",\r\n    indent: true\r\n  },\r\n  {\r\n    label: \"Railway Stations\",\r\n    ref: \"railStopCheck\",\r\n    key: \"showRailStops\",\r\n    masterKey: \"showPublicTransit\",\r\n    indent: true\r\n  },\r\n  {\r\n    label: \"Ferry Stops\",\r\n    ref: \"shipStopCheck\",\r\n    key: \"showShipStops\",\r\n    masterKey: \"showPublicTransit\",\r\n    indent: true\r\n  },\r\n  {\r\n    label: \"Tram Stations\",\r\n    ref: \"tramStopCheck\",\r\n    key: \"showTramStops\",\r\n    masterKey: \"showPublicTransit\",\r\n    indent: true\r\n  },\r\n  {\r\n    label: \"Car Ferry Stops\",\r\n    ref: \"ferryStopCheck\",\r\n    key: \"showFerryStops\",\r\n    masterKey: \"showPublicTransit\",\r\n    indent: true\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\n\r\nconst controlOption = (props, controlSettings, toggleLayer, i) => {\r\n  return (\r\n    <div\r\n      className={\r\n        \"controller-option \" +\r\n        (controlSettings.indent ? \"option-indented-checkbox \" : \"\") +\r\n        (shouldDisable(props, controlSettings.dep) ? \"disabled\" : \"\")\r\n      }\r\n      key={i}\r\n    >\r\n      <Checkbox\r\n        label={controlSettings.label}\r\n        ref={controlSettings.ref}\r\n        type=\"checkbox\"\r\n        checked={props[controlSettings.key]}\r\n        defaultChecked={props[controlSettings.key]}\r\n        onChange={(e, { checked }) =>\r\n          toggleLayer({\r\n            ...controlSettings,\r\n            checked\r\n          })\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction shouldDisable(props, dependentBox) {\r\n  return dependentBox && !props[dependentBox];\r\n}\r\n\r\nexport default controlOption;\r\n","import controls from \"../services/controls.service\";\n\nexport const controlToggle = (state, key, checked) => {\n  let result = [key];\n  const pressedControl = controls.find(control => control.key === key);\n\n  if (pressedControl.isMaster) {\n    // Master checkbox have been pressed. Update all sub checkboxes.\n    controls\n      .filter(obj => obj.masterKey === key)\n      .forEach(box => result.push(box.key));\n  } else {\n    // Check if it is a sub box.\n    const masterKey = pressedControl.masterKey;\n    if (masterKey) {\n      if (checked) {\n        // A sub checkbox enabled. Enable master.\n        result.push(masterKey);\n      } else {\n        const subBoxes = controls.filter(obj => obj.masterKey === masterKey);\n        const subStates = subBoxes.map(sub => state[sub.key]);\n        const offNumber = subStates.reduce(\n          (acc, isOn) => (isOn ? acc : acc + 1),\n          1\n        );\n\n        if (offNumber === subBoxes.length) {\n          // All sub checkboxes off. Disable master.\n          result.push(masterKey);\n        }\n      }\n    }\n  }\n\n  return result;\n};\n\nexport default controlToggle;\n","import React from \"react\";\n\nimport history from \"../history\";\nimport layers from \"../layers\";\n\nimport controls from \"../services/controls.service\";\nimport controlOption from \"./controlOption\";\nimport controlToggle from \"./controlToggle\";\nimport { controllerUrlManager } from \"../services/urlManagement.service\";\n\nimport \"../Controller.css\";\n\nimport { slide as Menu } from \"react-burger-menu\";\nimport { isMobile } from \"react-device-detect\";\n\nclass Controller extends React.Component {\n  static defaultProps = {\n    showParking: false,\n    showBikeTraffic: true,\n    extrudeBikeTraffic: true,\n    showCarTraffic: !isMobile,\n    extrudeCarTraffic: false,\n    showEvCharging: true,\n    menuOpen: !isMobile,\n    onLayerChange: () => {},\n    showPublicTransit: true,\n    showBusStops: true,\n    showFerryStops: true,\n    showMetroStops: true,\n    showRailStops: true,\n    showShipStops: true,\n    showTramStops: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.controlOptions = controls;\n\n    this._bikeTrafficHeight = props.extrudeBikeTraffic ? 1 : 0.01;\n    this._carTrafficHeight = props.extrudeCarTraffic ? 1 : 0.01;\n  }\n\n  componentDidMount() {\n    this._updateLayers();\n\n    history.listen(() => this.forceUpdate());\n\n    layers.onLayerLoaded(() => this._updateLayers());\n  }\n\n  _updateLayers = () => {\n    const layerSettings = {\n      ...this.props,\n      _bikeTrafficHeight: this._bikeTrafficHeight,\n      _carTrafficHeight: this._carTrafficHeight\n    };\n\n    const visibleLayers = layers.setLayers(layerSettings);\n\n    this.props.onLayerChange(visibleLayers);\n  };\n\n  _toggleLayer = ({ checked, key, animate, heightKey }) => {\n    let state = { ...this.props };\n\n    if (animate && heightKey) {\n      layers.animateLayer(v => (this[heightKey] = v), checked, () =>\n        this._updateLayers()\n      );\n    }\n\n    controlToggle(state, key, checked).forEach(item => (state[item] = checked));\n\n    this.props.onChange(state);\n\n    setTimeout(this._updateLayers, 0);\n  };\n\n  render() {\n    return (\n      <Menu\n        width={200}\n        className={\"controller-container\"}\n        right\n        noOverlay\n        disableOverlayClick\n        isOpen={this.props.menuOpen}\n        onStateChange={state =>\n          this.props.onChange({ ...this.props, menuOpen: state.isOpen })\n        }\n      >\n        <h3>Stockholm Sustainable Traffic Planning</h3>\n        <p>Toggle the checkboxes below to turn layers on&nbsp;and&nbsp;off</p>\n\n        {this.controlOptions.map((option, i) => {\n          return controlOption(\n            this.props,\n            option,\n            settings => {\n              this._toggleLayer(settings);\n            },\n            i\n          );\n        })}\n\n        <div className=\"controller-option\">\n          *right click and drag to rotate camera\n        </div>\n      </Menu>\n    );\n  }\n}\n\nexport default controllerUrlManager(Controller);\n","import React from \"react\";\nimport DeckGL from \"deck.gl\";\nimport MapGL from \"react-map-gl\";\n\nimport history from \"./history\";\nimport { mapUrlManager } from \"./services/urlManagement.service\";\nimport Controller from \"./Components/Controller\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./App.css\";\n\n// Initial viewport settings\nconst initialViewState = {\n  longitude: 18.0686,\n  latitude: 59.3293,\n  zoom: 13,\n  pitch: 45,\n  bearing: 0\n};\n\nclass App extends React.Component {\n  static defaultProps = initialViewState;\n\n  constructor() {\n    super();\n\n    this.state = {\n      mapLayers: []\n    };\n  }\n\n  _onWebGLInitialized = gl => {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n    this.setState({ gl });\n  };\n\n  // _onMapLoad = () => {\n  // const map = this._map;\n  // const deck = this._deck;\n\n  // map.addLayer(buildingsLayer())\n  // map.addLayer(new MapboxLayer({ id: 'layer-abc', deck }));\n  // }\n\n  _onLayerChange = mapLayers => {\n    this.setState({ mapLayers });\n  };\n\n  _toolTipCallback = info => {\n    this.setState({\n      hoveredObject: info.object,\n      pointerX: info.x,\n      pointerY: info.y\n    });\n  };\n\n  _renderTooltip() {\n    const { hoveredObject, pointerX, pointerY } = this.state || {};\n    return (\n      hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: pointerX,\n            top: pointerY,\n            color: \"green\",\n            backgroundColor: \"white\",\n            fontFamily: \"Open Sans\",\n            padding: 5\n          }}\n        >\n          {hoveredObject.message}\n        </div>\n      )\n    );\n  }\n\n  _updateUrl({ viewState }) {\n    console.log(viewState);\n    clearTimeout(this.urlTimer);\n\n    this.urlTimer = setTimeout(() => {\n      this.props.onChange(viewState);\n    }, 500);\n  }\n\n  componentDidMount() {\n    document\n      .getElementById(\"container\")\n      .addEventListener(\"contextmenu\", evt => evt.preventDefault());\n\n    history.listen(() => this.forceUpdate());\n  }\n\n  render() {\n    const { gl } = this.state;\n\n    const layers = this.state.mapLayers;\n\n    return (\n      <div id=\"container\">\n        <DeckGL\n          ref={ref => {\n            // save a reference to the Deck instance\n            this._deck = ref && ref.deck;\n          }}\n          onWebGLInitialized={this._onWebGLInitialized}\n          initialViewState={this.props}\n          onViewStateChange={viewport => this._updateUrl(viewport)}\n          controller={true}\n          layers={layers}\n        >\n          {gl && (\n            <MapGL\n              ref={ref => {\n                // save a reference to the mapboxgl.Map instance\n                this._map = ref && ref.getMap();\n              }}\n              mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n              // gl={gl}\n              onLoad={this._onMapLoad}\n              mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n              preventStyleDiffing={true}\n            />\n          )}\n          {this._renderTooltip()}\n        </DeckGL>\n\n        <Controller\n          onLayerChange={this._onLayerChange}\n          toolTipCallback={this._toolTipCallback}\n        />\n\n        <div className=\"footer\">\n          2019 -{\" \"}\n          <a\n            href=\"http://tylernwolf.com?ref=mobilityObserver\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Tyler Wolf\n          </a>{\" \"}\n          and Adam Ekberg - Data Source:{\" \"}\n          <a\n            href=\"https://dataportalen.stockholm.se/dataportalen/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            https://dataportalen.stockholm.se/dataportalen/\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default mapUrlManager(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { configureUrlQuery } from 'react-url-query';\n\nimport history from './history';\n\nconfigureUrlQuery({ history });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}