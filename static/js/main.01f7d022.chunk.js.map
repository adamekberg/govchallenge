{"version":3,"sources":["layers/layers.js","Components/Controller.js","App.js","serviceWorker.js","index.js"],"names":["carTrafficData","carTrafficData1","concat","carTrafficData2","colorRange","LIGHT_SETTINGS","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","parkingLayer","show","arguments","length","undefined","GeoJsonLayer","id","data","parkingData","pickable","stroked","filled","extruded","lineWidthScale","lineWidthMinPixels","getFillColor","getLineColor","getRadius","getLineWidth","getElevation","visible","busStopLayer","busStopData","cycleTrafficLayer","height","getColorValue","points","reduce","a","c","value","HexagonLayer","cycleTrafficData","radius","elevationScale","getPosition","d","long","lat","getElevationValue","lightSettings","opacity","carTrafficLayer","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_toggleParking","e","_ref","checked","setState","showParking","setTimeout","_updateLayers","_toggleBusStops","_ref2","showBusStops","_toggleCycleTraffic","_ref3","showCycleTraffic","_toggleCycleTrafficExtrude","_ref4","extrudeCycleTraffic","_animateLayer","v","_cycleTrafficHeight","_toggleCarTraffic","_ref5","showCarTraffic","_toggleCarTrafficExtrude","_ref6","extrudeCarTraffic","_carTrafficHeight","layers","state","props","onLayerChange","setHeight","extrude","target","TWEEN","Tween","to","easing","Easing","Quadratic","Out","onUpdate","start","isMobile","menuOpen","animate","requestAnimationFrame","update","isOpen","_this2","react_default","createElement","BurgerMenu","width","className","right","noOverlay","disableOverlayClick","onStateChange","handleStateChange","Checkbox","label","ref","type","onChange","defaultChecked","disabled","React","Component","initialViewState","longitude","latitude","zoom","pitch","bearing","_onWebGLInitialized","gl","enable","DEPTH_TEST","depthFunc","LEQUAL","_onLayerChange","mapLayers","hoveredObject","pointerX","pointerY","style","position","zIndex","pointerEvents","left","top","message","document","getElementById","addEventListener","evt","preventDefault","esm","_deck","deck","onWebGLInitialized","controller","dist_esm","_map","getMap","mapboxApiAccessToken","onLoad","_onMapLoad","mapStyle","preventStyleDiffing","_renderTooltip","Components_Controller","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01f7d022.chunk.js","sourcesContent":["import {\n  GeoJsonLayer,\n  HexagonLayer,\n  // ContourLayer,\n} from 'deck.gl';\n\nimport parkingData from \"../data/Stockholm_Parking.json\";\nimport busStopData from \"../data/bus_stops_geo.json\";\nimport cycleTrafficData from \"../data/cycle_data_final.json\";\nimport carTrafficData1 from \"../data/cars_data_part1.json\";\nimport carTrafficData2 from \"../data/cars_data_part2.json\";\n\nconst carTrafficData = carTrafficData1.concat(carTrafficData2)\n\nconst colorRange = [\n  [1, 152, 189],\n  [73, 227, 206],\n  [216, 254, 181],\n  [254, 237, 177],\n  [254, 173, 84],\n  [209, 55, 78]\n];\n\nconst LIGHT_SETTINGS = {\n  lightsPosition: [16.56, 57.83, 8000, 19.56, 60.83, 8000],\n  ambientRatio: 0.4,\n  diffuseRatio: 0.6,\n  specularRatio: 0.2,\n  lightsStrength: [0.8, 0.0, 0.8, 0.0],\n  numberOfLights: 2\n};\n\nconst parkingLayer = (show = true) => {\n  return new GeoJsonLayer({\n    id: \"parking-layer\",\n    data: parkingData,\n    pickable: true,\n    stroked: true,\n    filled: false,\n    extruded: true,\n    lineWidthScale: 20,\n    lineWidthMinPixels: 2,\n    getFillColor: [200, 200, 255, 200],\n    getLineColor: [200, 200, 255, 200],\n    getRadius: 100,\n    getLineWidth: 1,\n    getElevation: 0,\n    visible: show\n    // onHover: ({object, x, y}) => {\n    //console.log('h', object)\n    //   const tooltip = object.properties.name || object.properties.station;\n    //    Update tooltip\n    //      http://deck.gl/#/documentation/developer-guide/adding-interactivity?section=example-display-a-tooltip-for-hovered-object\n\n    // }\n  });\n};\n\nconst busStopLayer = (show = true) => {\n  return new GeoJsonLayer({\n    id: \"bus-stop-layer\",\n    data: busStopData,\n    pickable: true,\n    stroked: true,\n    filled: true,\n    // extruded: true,\n    lineWidthScale: 20,\n    lineWidthMinPixels: 2,\n    getFillColor: [255, 120, 255, 200],\n    getLineColor: [255, 120, 255, 200],\n    getRadius: 10,\n    getLineWidth: 1,\n    getElevation: 0,\n    visible: show\n    // onHover: ({object, x, y}) => {\n    // //console.log('h', object)\n    //   if(object) {\n    //     const tooltip = `${object.properties.StopPointName}\n    //       ${object.properties.StopPointNumber}`\n\n    //     // this.props.onHover(tooltip)\n    //   }\n    // }\n  });\n};\n\n// const busCoverageLayer = (show=true) => {\n\n//   return new ContourLayer({\n//     id: 'contourLayer',\n//     // Three contours are rendered.\n//     contours: [\n//       {threshold: 1, color: [255, 0, 0, 255], strokeWidth: 1}, // => Isoline for threshold 1\n//       {threshold: 5, color: [0, 255, 0], strokeWidth: 2}, // => Isoline for threshold 5\n//       {threshold: [6, 10], color: [0, 0, 255, 128]} // => Isoband for threshold range [6, 10)\n//     ],\n//     cellSize: 200,\n//     getPosition: d => d.COORDINATES,\n//   })\n\n// }\n\nconst cycleTrafficLayer = (show = true, height=1) => {\n\n  function getColorValue(points) {\n    return points.reduce((a, c) => a + c.value, 0);\n  }\n\n  return new HexagonLayer({\n    id: \"hexagon-layer\",\n    data: cycleTrafficData,\n    pickable: true,\n    extruded: true,\n    radius: 20,\n    elevationScale: height,\n    colorRange,\n    getPosition: d => {\n      return [+d.long, +d.lat];\n    },\n    getColorValue,\n    getElevationValue: getColorValue,\n    lightSettings: LIGHT_SETTINGS,\n    opacity: 1,\n    visible: show\n    // onHover: ({object, x, y}) => {\n    // const tooltip = `${object.centroid.join(', ')}\\nCount: ${object.points.length}`;\n    /* Update tooltip\n         http://deck.gl/#/documentation/developer-guide/adding-interactivity?section=example-display-a-tooltip-for-hovered-object\n      */\n    // }\n  });\n};\n\nconst carTrafficLayer = (show = true, height=0.01) => {\n  function getColorValue(points) {\n    return points.reduce((a,c) => a + +c.value, 0)\n  }\n\n    return new HexagonLayer({\n      id: 'car-traffic-layer',\n      data: carTrafficData,\n      pickable: true,\n      extruded: true,\n      radius: 20,\n      elevationScale: height,\n      colorRange,\n      getPosition: d => {\n        return [ +d.long, +d.lat ]\n      },\n      getColorValue,\n      getElevationValue: getColorValue,\n      lightSettings: LIGHT_SETTINGS,\n      opacity:1,\n      visible: show\n    });\n\n};\n\nconst buildingsLayer = () => {\n  return {\n    id: \"3d-buildings\",\n    source: \"composite\",\n    \"source-layer\": \"building\",\n    filter: [\"==\", \"extrude\", \"true\"],\n    type: \"fill-extrusion\",\n    minzoom: 15,\n    paint: {\n      \"fill-extrusion-color\": \"#aaa\",\n      // use an 'interpolate' expression to add a smooth transition effect to the\n      // buildings as the user zooms in\n      \"fill-extrusion-height\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        15,\n        0,\n        15.05,\n        [\"get\", \"height\"]\n      ],\n      \"fill-extrusion-base\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        15,\n        0,\n        15.05,\n        [\"get\", \"min_height\"]\n      ],\n      \"fill-extrusion-opacity\": 0.6\n    }\n  };\n};\n\nexport { parkingLayer, busStopLayer, cycleTrafficLayer, carTrafficLayer };\n","import React from \"react\";\nimport {\n  parkingLayer,\n  busStopLayer,\n  cycleTrafficLayer,\n  carTrafficLayer\n} from \"../layers/layers\";\nimport \"../Controller.css\";\nimport { slide as Menu } from 'react-burger-menu'\nimport { isMobile } from 'react-device-detect'\nimport TWEEN from '@tweenjs/tween.js'\n\nimport { Checkbox } from \"semantic-ui-react\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showParking: false,\n      showBusStops: true,\n      showCycleTraffic: true,\n      extrudeCycleTraffic: true,\n      showCarTraffic: !isMobile,\n      extrudeCarTraffic: false,\n      menuOpen: !isMobile\n    };\n\n    this._cycleTrafficHeight = 1\n    this._carTrafficHeight = 0.01\n  }\n\n  _toggleParking = (e, { checked }) => {\n    this.setState({ showParking: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleBusStops = (e, { checked }) => {\n    this.setState({ showBusStops: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCycleTraffic = (e, { checked }) => {\n    this.setState({ showCycleTraffic: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCycleTrafficExtrude = (e, { checked }) => {\n    this.setState({ extrudeCycleTraffic: checked });\n    this._animateLayer( (v) => this._cycleTrafficHeight = v, checked )\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCarTraffic = (e, { checked }) => {\n    this.setState({ showCarTraffic: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCarTrafficExtrude = (e, { checked }) => {\n    this.setState({ extrudeCarTraffic: checked });\n    this._animateLayer( (v) => this._carTrafficHeight = v, checked )\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _updateLayers = () => {\n    let layers = [\n      parkingLayer(this.state.showParking),\n      busStopLayer(this.state.showBusStops),\n      cycleTrafficLayer(\n        this.state.showCycleTraffic,\n        this._cycleTrafficHeight\n      ),\n      carTrafficLayer(\n        this.state.showCarTraffic,\n        this._carTrafficHeight\n      )\n    ];\n\n    this.props.onLayerChange(layers);\n  };\n\n  _animateLayer = (setHeight, extrude) => {\n    let height = { value: extrude ? 0.01 : 1 },\n      target = extrude ? 1 : 0.01\n\n    let t = new TWEEN.Tween(height)\n      .to({ value: target }, 500)\n      .easing(TWEEN.Easing.Quadratic.Out)\n      .onUpdate(() => {\n        setHeight( height.value )\n        this._updateLayers()\n      })\n      .start()\n\n  }\n\n  componentDidMount() {\n    this._updateLayers();\n\n    animate()\n\n    function animate() {\n      requestAnimationFrame( animate )\n      TWEEN.update()\n    }\n  }\n\n  handleStateChange (state) {\n    this.setState({ menuOpen: state.isOpen })\n  }\n\n  render() {\n    return (\n      <Menu\n        width={ 200 }\n        className={ \"controller-container\" }\n        right\n        noOverlay\n        disableOverlayClick\n        isOpen={ this.state.menuOpen }\n        onStateChange={(state) => this.handleStateChange(state) }\n        >\n        <h3>Stockholm Sustainable Traffic Planning</h3>\n        <p>Toggle the checkboxes below to turn layers on&nbsp;and&nbsp;off</p>\n\n        <div className=\"controller-option option-parking\">\n          <Checkbox\n            label=\"Parking\"\n            ref=\"parkingCheck\"\n            type=\"checkbox\"\n            onChange={this._toggleParking}\n          />\n        </div>\n        <div className=\"controller-option option-bus-stops\">\n          <Checkbox\n            label=\"Bus Stops\"\n            ref=\"busStopCheck\"\n            type=\"checkbox\"\n            defaultChecked\n            onChange={this._toggleBusStops}\n          />\n        </div>\n        <div className=\"controller-option option-cycle-traffic\">\n\n          <Checkbox\n            label=\"Bicycle Traffic\"\n            ref=\"cycleTrafficCheck\"\n            type=\"checkbox\"\n            defaultChecked\n            onChange={this._toggleCycleTraffic}\n          />\n\n        </div>\n        <div className=\"controller-option option-extrude-checkbox\">\n          {this.state.showCycleTraffic ? (\n            <Checkbox\n              label=\"Extrude Bicycle Traffic\"\n              ref=\"cycleTrafficCheck\"\n              type=\"checkbox\"\n              defaultChecked\n              onChange={this._toggleCycleTrafficExtrude}\n            />\n          ) : (\n            <Checkbox\n              label=\"Extrude Bicycle Traffic\"\n              ref=\"cycleTrafficCheck\"\n              type=\"checkbox\"\n              defaultChecked\n              disabled\n              onChange={this._toggleCycleTrafficExtrude}\n            />\n          )}\n        </div>\n\n        <div className=\"controller-option option-car-traffic\">\n          <Checkbox\n            label=\"Vehicle Traffic\"\n            ref=\"carTrafficCheck\"\n            type=\"checkbox\"\n            defaultChecked={ !isMobile }\n            onChange={this._toggleCarTraffic}\n          />\n        </div>\n        <div className=\"controller-option option-extrude-checkbox\">\n\n          {this.state.showCarTraffic ? (\n            <Checkbox\n              label=\"Extrude Vehicle Traffic\"\n              ref=\"carTrafficCheck\"\n              type=\"checkbox\"\n              onChange={this._toggleCarTrafficExtrude}\n            />\n          ) : (\n            <Checkbox\n              label=\"Extrude Vehicle Traffic\"\n              ref=\"carTrafficCheck\"\n              type=\"checkbox\"\n              disabled\n              onChange={this._toggleCarTrafficExtrude}\n            />\n          )}\n\n        </div>\n\n        <div className=\"controller-option\">\n          *right click and drag to rotate camera\n        </div>\n\n      </Menu>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport DeckGL from \"deck.gl\";\nimport MapGL from \"react-map-gl\";\n\nimport Controller from \"./Components/Controller\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./App.css\";\n\n// Set your mapbox access token here\nconst MAPBOX_ACCESS_TOKEN =\n  \"pk.eyJ1IjoiYWRhbWVrYmVyZyIsImEiOiJjamttcXdjeDMwZHd0M2tvemx1a3BnZ2h5In0.JtC9rUXVaxJ8ONGdfmPmsg\";\n\n// Initial viewport settings\nconst initialViewState = {\n  longitude: 18.0686,\n  latitude: 59.3293,\n  zoom: 13,\n  pitch: 45,\n  bearing: 0\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      mapLayers: []\n    };\n  }\n\n  _onWebGLInitialized = gl => {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n    this.setState({ gl });\n  };\n\n  // _onMapLoad = () => {\n  // const map = this._map;\n  // const deck = this._deck;\n\n  // map.addLayer(buildingsLayer())\n  // map.addLayer(new MapboxLayer({ id: 'layer-abc', deck }));\n  // }\n\n  _onLayerChange = mapLayers => {\n    this.setState({ mapLayers });\n  };\n\n  _renderTooltip() {\n    const { hoveredObject, pointerX, pointerY } = this.state || {};\n    return (\n      hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: pointerX,\n            top: pointerY\n          }}\n        >\n          {hoveredObject.message}\n        </div>\n      )\n    );\n  }\n\n  componentDidMount() {\n    document\n      .getElementById(\"container\")\n      .addEventListener(\"contextmenu\", evt => evt.preventDefault());\n  }\n\n  render() {\n    const { gl } = this.state;\n\n    const layers = this.state.mapLayers;\n\n    return (\n      <div id=\"container\">\n        <DeckGL\n          ref={ref => {\n            // save a reference to the Deck instance\n            this._deck = ref && ref.deck;\n          }}\n          onWebGLInitialized={this._onWebGLInitialized}\n          initialViewState={initialViewState}\n          controller={true}\n          layers={layers}\n        >\n          {gl && (\n            <MapGL\n              ref={ref => {\n                // save a reference to the mapboxgl.Map instance\n                this._map = ref && ref.getMap();\n              }}\n              mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n              // gl={gl}\n              onLoad={this._onMapLoad}\n              mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n              preventStyleDiffing={true}\n            />\n          )}\n          {this._renderTooltip()}\n        </DeckGL>\n\n        <Controller onLayerChange={this._onLayerChange} />\n\n        <div className=\"footer\">\n          2019 - <a href=\"http://tylernwolf.com?ref=mobilityObserver\" target=\"_blank\">Tyler Wolf</a> and Adam Ekberg - Data Source:{\" \"}\n          <a href=\"https://open.stockholm.se/\" target=\"_blank\">https://open.stockholm.se/</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}