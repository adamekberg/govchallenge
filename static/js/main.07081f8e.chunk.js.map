{"version":3,"sources":["history.js","layers/layers.js","Components/Controller.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","carTrafficData","carTrafficData1","concat","carTrafficData2","colorRange","LIGHT_SETTINGS","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","parkingLayer","show","arguments","length","undefined","GeoJsonLayer","id","data","parkingData","pickable","stroked","filled","extruded","lineWidthScale","lineWidthMinPixels","getFillColor","getLineColor","getRadius","getLineWidth","getElevation","visible","busStopLayer","busStopData","cycleTrafficLayer","height","getColorValue","points","reduce","a","c","value","HexagonLayer","cycleTrafficData","radius","elevationScale","getPosition","d","long","lat","getElevationValue","lightSettings","opacity","carTrafficLayer","Controller","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_toggleParking","e","_ref","checked","onChange","objectSpread","showParking","setTimeout","_updateLayers","_toggleBusStops","_ref2","showBusStops","_toggleCycleTraffic","_ref3","showCycleTraffic","_toggleCycleTrafficExtrude","_ref4","extrudeCycleTraffic","_animateLayer","v","_cycleTrafficHeight","_toggleCarTraffic","_ref5","showCarTraffic","_toggleCarTrafficExtrude","_ref6","extrudeCarTraffic","_carTrafficHeight","layers","onLayerChange","setHeight","extrude","target","TWEEN","Tween","to","easing","Easing","Quadratic","InOut","onUpdate","start","_this2","animate","requestAnimationFrame","update","listen","forceUpdate","_this3","react_default","createElement","BurgerMenu","width","className","right","noOverlay","disableOverlayClick","isOpen","menuOpen","onStateChange","state","Checkbox","label","ref","type","defaultChecked","disabled","React","Component","defaultProps","isMobile","addUrlProps","mapUrlToProps","url","console","log","decode","UrlQueryParamTypes","boolean","cp","bs","bt","xbt","ct","xct","m","mapUrlChangeHandlersToProps","replaceInUrlQuery","encode","App","_onWebGLInitialized","gl","enable","DEPTH_TEST","depthFunc","LEQUAL","setState","_onLayerChange","mapLayers","hoveredObject","pointerX","pointerY","style","position","zIndex","pointerEvents","left","top","message","viewState","clearTimeout","urlTimer","document","getElementById","addEventListener","evt","preventDefault","_this4","esm","_deck","deck","onWebGLInitialized","initialViewState","onViewStateChange","viewport","_updateUrl","controller","dist_esm","_map","getMap","mapboxApiAccessToken","process","onLoad","_onMapLoad","mapStyle","preventStyleDiffing","_renderTooltip","Components_Controller","href","longitude","latitude","zoom","pitch","bearing","number","lng","z","p","b","toFixed","Boolean","window","location","hostname","match","configureUrlQuery","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07081f8e.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import {\n  GeoJsonLayer,\n  HexagonLayer,\n  // ContourLayer,\n} from 'deck.gl';\n\nimport parkingData from \"../data/Stockholm_Parking.json\";\nimport busStopData from \"../data/bus_stops_geo.json\";\nimport cycleTrafficData from \"../data/cycle_data_final.json\";\nimport carTrafficData1 from \"../data/cars_data_part1.json\";\nimport carTrafficData2 from \"../data/cars_data_part2.json\";\n\nconst carTrafficData = carTrafficData1.concat(carTrafficData2)\n\nconst colorRange = [\n  [1, 152, 189],\n  [73, 227, 206],\n  [216, 254, 181],\n  [254, 237, 177],\n  [254, 173, 84],\n  [209, 55, 78]\n];\n\nconst LIGHT_SETTINGS = {\n  lightsPosition: [16.56, 57.83, 8000, 19.56, 60.83, 8000],\n  ambientRatio: 0.4,\n  diffuseRatio: 0.6,\n  specularRatio: 0.2,\n  lightsStrength: [0.8, 0.0, 0.8, 0.0],\n  numberOfLights: 2\n};\n\nconst parkingLayer = (show = true) => {\n  return new GeoJsonLayer({\n    id: \"parking-layer\",\n    data: parkingData,\n    pickable: true,\n    stroked: true,\n    filled: false,\n    extruded: true,\n    lineWidthScale: 20,\n    lineWidthMinPixels: 2,\n    getFillColor: [200, 200, 255, 200],\n    getLineColor: [200, 200, 255, 200],\n    getRadius: 100,\n    getLineWidth: 1,\n    getElevation: 0,\n    visible: show\n    // onHover: ({object, x, y}) => {\n    //console.log('h', object)\n    //   const tooltip = object.properties.name || object.properties.station;\n    //    Update tooltip\n    //      http://deck.gl/#/documentation/developer-guide/adding-interactivity?section=example-display-a-tooltip-for-hovered-object\n\n    // }\n  });\n};\n\nconst busStopLayer = (show = true) => {\n  return new GeoJsonLayer({\n    id: \"bus-stop-layer\",\n    data: busStopData,\n    pickable: true,\n    stroked: true,\n    filled: true,\n    // extruded: true,\n    lineWidthScale: 20,\n    lineWidthMinPixels: 2,\n    getFillColor: [255, 120, 255, 200],\n    getLineColor: [255, 120, 255, 200],\n    getRadius: 10,\n    getLineWidth: 1,\n    getElevation: 0,\n    visible: show\n    // onHover: ({object, x, y}) => {\n    // //console.log('h', object)\n    //   if(object) {\n    //     const tooltip = `${object.properties.StopPointName}\n    //       ${object.properties.StopPointNumber}`\n\n    //     // this.props.onHover(tooltip)\n    //   }\n    // }\n  });\n};\n\n// const busCoverageLayer = (show=true) => {\n\n//   return new ContourLayer({\n//     id: 'contourLayer',\n//     // Three contours are rendered.\n//     contours: [\n//       {threshold: 1, color: [255, 0, 0, 255], strokeWidth: 1}, // => Isoline for threshold 1\n//       {threshold: 5, color: [0, 255, 0], strokeWidth: 2}, // => Isoline for threshold 5\n//       {threshold: [6, 10], color: [0, 0, 255, 128]} // => Isoband for threshold range [6, 10)\n//     ],\n//     cellSize: 200,\n//     getPosition: d => d.COORDINATES,\n//   })\n\n// }\n\nconst cycleTrafficLayer = (show = true, height=1) => {\n\n  function getColorValue(points) {\n    return points.reduce((a, c) => a + c.value, 0);\n  }\n\n  return new HexagonLayer({\n    id: \"hexagon-layer\",\n    data: cycleTrafficData,\n    pickable: true,\n    extruded: true,\n    radius: 20,\n    elevationScale: height,\n    colorRange,\n    getPosition: d => {\n      return [+d.long, +d.lat];\n    },\n    getColorValue,\n    getElevationValue: getColorValue,\n    lightSettings: LIGHT_SETTINGS,\n    opacity: 1,\n    visible: show\n    // onHover: ({object, x, y}) => {\n    // const tooltip = `${object.centroid.join(', ')}\\nCount: ${object.points.length}`;\n    /* Update tooltip\n         http://deck.gl/#/documentation/developer-guide/adding-interactivity?section=example-display-a-tooltip-for-hovered-object\n      */\n    // }\n  });\n};\n\nconst carTrafficLayer = (show = true, height=0.01) => {\n  function getColorValue(points) {\n    return points.reduce((a,c) => a + +c.value, 0)\n  }\n\n    return new HexagonLayer({\n      id: 'car-traffic-layer',\n      data: carTrafficData,\n      pickable: true,\n      extruded: true,\n      radius: 20,\n      elevationScale: height,\n      colorRange,\n      getPosition: d => {\n        return [ +d.long, +d.lat ]\n      },\n      getColorValue,\n      getElevationValue: getColorValue,\n      lightSettings: LIGHT_SETTINGS,\n      opacity:1,\n      visible: show\n    });\n\n};\n\nconst buildingsLayer = () => {\n  return {\n    id: \"3d-buildings\",\n    source: \"composite\",\n    \"source-layer\": \"building\",\n    filter: [\"==\", \"extrude\", \"true\"],\n    type: \"fill-extrusion\",\n    minzoom: 15,\n    paint: {\n      \"fill-extrusion-color\": \"#aaa\",\n      // use an 'interpolate' expression to add a smooth transition effect to the\n      // buildings as the user zooms in\n      \"fill-extrusion-height\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        15,\n        0,\n        15.05,\n        [\"get\", \"height\"]\n      ],\n      \"fill-extrusion-base\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        15,\n        0,\n        15.05,\n        [\"get\", \"min_height\"]\n      ],\n      \"fill-extrusion-opacity\": 0.6\n    }\n  };\n};\n\nexport { parkingLayer, busStopLayer, cycleTrafficLayer, carTrafficLayer };\n","import React from \"react\";\n\nimport history from \"../history\";\nimport {\n  parkingLayer,\n  busStopLayer,\n  cycleTrafficLayer,\n  carTrafficLayer\n} from \"../layers/layers\";\nimport \"../Controller.css\";\n\nimport { slide as Menu } from \"react-burger-menu\";\nimport { isMobile } from \"react-device-detect\";\nimport TWEEN from \"@tweenjs/tween.js\";\nimport {\n  addUrlProps,\n  UrlQueryParamTypes,\n  replaceInUrlQuery,\n  decode,\n  encode\n} from \"react-url-query\";\nimport { Checkbox } from \"semantic-ui-react\";\n\nfunction mapUrlToProps(url, props) {\n  console.log(\"url\", url);\n  return {\n    showParking: decode(UrlQueryParamTypes.boolean, url.cp),\n    showBusStops: decode(UrlQueryParamTypes.boolean, url.bs),\n    showCycleTraffic: decode(UrlQueryParamTypes.boolean, url.bt),\n    extrudeCycleTraffic: decode(UrlQueryParamTypes.boolean, url.xbt),\n    showCarTraffic: decode(UrlQueryParamTypes.boolean, url.ct),\n    extrudeCarTraffic: decode(UrlQueryParamTypes.boolean, url.xct),\n    menuOpen: decode(UrlQueryParamTypes.boolean, url.m)\n  };\n}\n\nfunction mapUrlChangeHandlersToProps(props) {\n  return {\n    onChange: value => {\n      console.log(\"v\", value);\n      replaceInUrlQuery(\n        \"cp\",\n        encode(UrlQueryParamTypes.boolean, value.showParking)\n      );\n      replaceInUrlQuery(\n        \"bs\",\n        encode(UrlQueryParamTypes.boolean, value.showBusStops)\n      );\n      replaceInUrlQuery(\n        \"bt\",\n        encode(UrlQueryParamTypes.boolean, value.showCycleTraffic)\n      );\n      replaceInUrlQuery(\n        \"xbt\",\n        encode(UrlQueryParamTypes.boolean, value.extrudeCycleTraffic)\n      );\n      replaceInUrlQuery(\n        \"ct\",\n        encode(UrlQueryParamTypes.boolean, value.showCarTraffic)\n      );\n      replaceInUrlQuery(\n        \"xct\",\n        encode(UrlQueryParamTypes.boolean, value.extrudeCarTraffic)\n      );\n      replaceInUrlQuery(\n        \"m\",\n        encode(UrlQueryParamTypes.boolean, value.menuOpen)\n      );\n    }\n  };\n}\n\nclass Controller extends React.Component {\n  static defaultProps = {\n    showParking: false,\n    showBusStops: true,\n    showCycleTraffic: true,\n    extrudeCycleTraffic: true,\n    showCarTraffic: !isMobile,\n    extrudeCarTraffic: false,\n    menuOpen: !isMobile,\n    onLayerChange: () => {}\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._cycleTrafficHeight = props.extrudeCycleTraffic ? 1 : 0.01;\n    this._carTrafficHeight = props.extrudeCarTraffic ? 1 : 0.01;\n  }\n\n  _toggleParking = (e, { checked }) => {\n    this.props.onChange({ ...this.props, showParking: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleBusStops = (e, { checked }) => {\n    this.props.onChange({ ...this.props, showBusStops: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCycleTraffic = (e, { checked }) => {\n    this.props.onChange({ ...this.props, showCycleTraffic: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCycleTrafficExtrude = (e, { checked }) => {\n    this.props.onChange({ ...this.props, extrudeCycleTraffic: checked });\n    this._animateLayer(v => (this._cycleTrafficHeight = v), checked);\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCarTraffic = (e, { checked }) => {\n    this.props.onChange({ ...this.props, showCarTraffic: checked });\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _toggleCarTrafficExtrude = (e, { checked }) => {\n    this.props.onChange({ ...this.props, extrudeCarTraffic: checked });\n    this._animateLayer(v => (this._carTrafficHeight = v), checked);\n    // Note: Dirty - find the right way to do this\n    setTimeout(this._updateLayers, 0);\n  };\n\n  _updateLayers = () => {\n    let layers = [\n      parkingLayer(this.props.showParking),\n      busStopLayer(this.props.showBusStops),\n      cycleTrafficLayer(this.props.showCycleTraffic, this._cycleTrafficHeight),\n      carTrafficLayer(this.props.showCarTraffic, this._carTrafficHeight)\n    ];\n\n    this.props.onLayerChange(layers);\n  };\n\n  _animateLayer = (setHeight, extrude) => {\n    let height = { value: extrude ? 0.01 : 1 },\n      target = extrude ? 1 : 0.01;\n\n    new TWEEN.Tween(height)\n      .to({ value: target }, 500)\n      .easing(TWEEN.Easing.Quadratic.InOut)\n      .onUpdate(() => {\n        setHeight(height.value);\n        this._updateLayers();\n      })\n      .start();\n  };\n\n  componentDidMount() {\n    this._updateLayers();\n\n    animate();\n\n    function animate() {\n      requestAnimationFrame(animate);\n      TWEEN.update();\n    }\n\n    history.listen(() => this.forceUpdate());\n  }\n\n  render() {\n    return (\n      <Menu\n        width={200}\n        className={\"controller-container\"}\n        right\n        noOverlay\n        disableOverlayClick\n        isOpen={this.props.menuOpen}\n        onStateChange={state =>\n          this.props.onChange({ ...this.props, menuOpen: state.isOpen })\n        }\n      >\n        <h3>Stockholm Sustainable Traffic Planning</h3>\n        <p>Toggle the checkboxes below to turn layers on&nbsp;and&nbsp;off</p>\n\n        <div className=\"controller-option option-parking\">\n          <Checkbox\n            label=\"Parking\"\n            ref=\"parkingCheck\"\n            type=\"checkbox\"\n            defaultChecked={this.props.showParking}\n            onChange={this._toggleParking}\n          />\n        </div>\n        <div className=\"controller-option option-bus-stops\">\n          <Checkbox\n            label=\"Bus Stops\"\n            ref=\"busStopCheck\"\n            type=\"checkbox\"\n            defaultChecked={this.props.showBusStops}\n            onChange={this._toggleBusStops}\n          />\n        </div>\n        <div className=\"controller-option option-cycle-traffic\">\n          <Checkbox\n            label=\"Bicycle Traffic\"\n            ref=\"cycleTrafficCheck\"\n            type=\"checkbox\"\n            defaultChecked={this.props.showCycleTraffic}\n            onChange={this._toggleCycleTraffic}\n          />\n        </div>\n        <div className=\"controller-option option-extrude-checkbox\">\n          {this.props.showCycleTraffic ? (\n            <Checkbox\n              label=\"Extrude Bicycle Traffic\"\n              ref=\"cycleTrafficCheck\"\n              type=\"checkbox\"\n              defaultChecked={this.props.extrudeCycleTraffic}\n              onChange={this._toggleCycleTrafficExtrude}\n            />\n          ) : (\n            <Checkbox\n              label=\"Extrude Bicycle Traffic\"\n              ref=\"cycleTrafficCheck\"\n              type=\"checkbox\"\n              defaultChecked={this.props.extrudeCycleTraffic}\n              disabled\n              onChange={this._toggleCycleTrafficExtrude}\n            />\n          )}\n        </div>\n\n        <div className=\"controller-option option-car-traffic\">\n          <Checkbox\n            label=\"Vehicle Traffic\"\n            ref=\"carTrafficCheck\"\n            type=\"checkbox\"\n            defaultChecked={this.props.showCarTraffic}\n            onChange={this._toggleCarTraffic}\n          />\n        </div>\n        <div className=\"controller-option option-extrude-checkbox\">\n          {this.props.showCarTraffic ? (\n            <Checkbox\n              label=\"Extrude Vehicle Traffic\"\n              ref=\"carTrafficCheck\"\n              type=\"checkbox\"\n              defaultChecked={this.props.extrudeCarTraffic}\n              onChange={this._toggleCarTrafficExtrude}\n            />\n          ) : (\n            <Checkbox\n              label=\"Extrude Vehicle Traffic\"\n              ref=\"carTrafficCheck\"\n              type=\"checkbox\"\n              defaultChecked={this.props.extrudeCarTraffic}\n              disabled\n              onChange={this._toggleCarTrafficExtrude}\n            />\n          )}\n        </div>\n\n        <div className=\"controller-option\">\n          *right click and drag to rotate camera\n        </div>\n      </Menu>\n    );\n  }\n}\n\nexport default addUrlProps({ mapUrlToProps, mapUrlChangeHandlersToProps })(\n  Controller\n);\n","import React from \"react\";\nimport DeckGL from \"deck.gl\";\nimport MapGL from \"react-map-gl\";\nimport {\n  addUrlProps,\n  UrlQueryParamTypes,\n  replaceInUrlQuery,\n  decode,\n  encode,\n} from 'react-url-query';\n\nimport history from './history';\nimport Controller from \"./Components/Controller\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./App.css\";\n\nfunction mapUrlToProps(url, props) {\n  return {\n    longitude: decode(UrlQueryParamTypes.number, url.lng) || 18.0686,\n    latitude: decode(UrlQueryParamTypes.number, url.lat) || 59.3293,\n    zoom: decode(UrlQueryParamTypes.number, url.z) || 13,\n    pitch: decode(UrlQueryParamTypes.number, url.p) || 45,\n    bearing: decode(UrlQueryParamTypes.number, url.b) || 0,\n  }\n}\n\nfunction mapUrlChangeHandlersToProps(props) {\n  return {\n    onChange: (value) => {\n      replaceInUrlQuery('lng', encode(UrlQueryParamTypes.number, value.longitude));\n      replaceInUrlQuery('lat', encode(UrlQueryParamTypes.number, value.latitude));\n      replaceInUrlQuery('z', encode(UrlQueryParamTypes.number, value.zoom.toFixed(1)));\n      replaceInUrlQuery('p', encode(UrlQueryParamTypes.number, value.pitch.toFixed(1)));\n      replaceInUrlQuery('b', encode(UrlQueryParamTypes.number, value.bearing.toFixed(1)));\n    }\n  }\n}\n\n// Initial viewport settings\nconst initialViewState = {\n  longitude: 18.0686,\n  latitude: 59.3293,\n  zoom: 13,\n  pitch: 45,\n  bearing: 0,\n};\n\nclass App extends React.Component {\n  static defaultProps = initialViewState\n\n  constructor() {\n    super();\n\n    this.state = {\n      mapLayers: []\n    };\n  }\n\n  _onWebGLInitialized = gl => {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n    this.setState({ gl });\n  };\n\n  // _onMapLoad = () => {\n  // const map = this._map;\n  // const deck = this._deck;\n\n  // map.addLayer(buildingsLayer())\n  // map.addLayer(new MapboxLayer({ id: 'layer-abc', deck }));\n  // }\n\n  _onLayerChange = mapLayers => {\n    this.setState({ mapLayers });\n  };\n\n  _renderTooltip() {\n    const { hoveredObject, pointerX, pointerY } = this.state || {};\n    return (\n      hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: pointerX,\n            top: pointerY\n          }}\n        >\n          {hoveredObject.message}\n        </div>\n      )\n    );\n  }\n\n  _updateUrl({viewState}) {\n    clearTimeout(this.urlTimer);\n\n    this.urlTimer = setTimeout(() => {\n      this.props.onChange(viewState)\n    },500);\n\n  }\n\n  componentDidMount() {\n    document\n      .getElementById(\"container\")\n      .addEventListener(\"contextmenu\", evt => evt.preventDefault());\n\n    history.listen(() => this.forceUpdate());\n  }\n\n  render() {\n    const { gl } = this.state;\n\n    const layers = this.state.mapLayers;\n\n    return (\n      <div id=\"container\">\n        <DeckGL\n          ref={ref => {\n            // save a reference to the Deck instance\n            this._deck = ref && ref.deck;\n          }}\n          onWebGLInitialized={this._onWebGLInitialized}\n          initialViewState={this.props}\n          onViewStateChange={ viewport => this._updateUrl(viewport) }\n          controller={true}\n          layers={layers}\n        >\n          {gl && (\n            <MapGL\n              ref={ref => {\n                // save a reference to the mapboxgl.Map instance\n                this._map = ref && ref.getMap();\n              }}\n              mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n              // gl={gl}\n              onLoad={this._onMapLoad}\n              mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n              preventStyleDiffing={true}\n            />\n          )}\n          {this._renderTooltip()}\n        </DeckGL>\n\n        <Controller onLayerChange={this._onLayerChange} />\n\n        <div className=\"footer\">\n          2019 - <a href=\"http://tylernwolf.com?ref=mobilityObserver\" target=\"_blank\">Tyler Wolf</a> and Adam Ekberg - Data Source:{\" \"}\n          <a href=\"https://dataportalen.stockholm.se/dataportalen/\" target=\"_blank\">https://dataportalen.stockholm.se/dataportalen/</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default addUrlProps({ mapUrlToProps, mapUrlChangeHandlersToProps })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { configureUrlQuery } from 'react-url-query';\n\nimport history from './history';\n\nconfigureUrlQuery({ history });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}